rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {
match /animal/{id} {
    allow read: if true; 
    allow write: if true; 
}
match /grocerylist/{id} {
    function isOwnerOrMember (request, resource) {
        let isOwner = request.auth.uid == resource.id;
        let isMember = request.auth.token.memberOf == resource.id;
        return isOwner || isMember;
    }
    allow create: if false; 
    allow read: if isOwnerOrMember(request, resource);
    allow update: if false; 
    allow delete: if false; 
}
match /invitation/{invitationId} {
// TODO Validate password
    allow create: if request.auth != null &&
            request.resource.data.owner == request.auth.uid &&
            request.resource.data.version == '1' &&
            request.resource.data.createdOn == request.time;
    allow update: if false; 
    allow delete: if request.auth.uid == resource.data.owner;
    allow list: if request.auth.uid == resource.data.owner;
    allow get: if request.auth != null &&
            request.auth.token.firebase.sign_in_provider != 'anonymous';
}
}}